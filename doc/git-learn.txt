pwd:用于显示当前目录
ls -ah:显示所有目录包括隐藏目录
git fetch：相当于是从远程获取最新版本到本地，不会自动merge
Git fetch origin master
git log -p master..origin/master
git merge origin/master
以上命令的含义：
首先从远程的origin的master主分支下载最新的版本到origin/master分支上
然后比较本地的master分支和origin/master分支的差别
最后进行合并
上述过程其实可以用以下更清晰的方式来进行：
git fetch origin master:tmp
git diff tmp 
git merge tmp
从远程获取最新的版本到本地的test分支上
之后再进行比较合并


git pull：相当于是从远程获取最新版本并merge到本地
git pull origin master

上述命令其实相当于git fetch 和 git merge
在实际使用中，git fetch更安全一些
因为在merge前，我们可以查看更新情况，然后再决定是否合并


比较本地库与远程库
方法一：
1、获取远程库
git pull origin master:temp
命令的意思是：从远程的origin仓库的master分支下载到本地并新建一个分支temp
2、比较不同
git diff temp
命令的意思是：比较master分支和temp分支的不同
方法二：
假定远端库名为 origin, 你要比较的本地分支为 test, 远端分支为 xxx
1，获取远端库最新信息
git fetch origin
2，做diff
git diff test origin/xxx 本地和远程比较
git diff 查看尚未暂存的文件更新了哪些部分

git diff filename 查看尚未暂存的某个文件更新了哪些

git diff –cached 查看已经暂存起来的文件和上次提交的版本之间的差异

git diff –cached filename 查看已经暂存起来的某个文件和上次提交的版本之间的差异

git log命令显示从最近到最远的提交日志
git log --pretty=oneline

使用技巧总结:
以app.js为例
1,先查看app.js文件状态 
git status app.js
2,查看app.js文件提交记录(下面命令查看最近两次的提交记录)
git log --pretty=oneline -2 app.js
3,对比文件差距
git diff 91091 --cached app.js(文件已暂存)
git diff 91091 app.js
----------------------------------------------------
git reset --hard 3628164:回退到版本3628164(不加提交版本则回退到最新的提交状态)
git log可以查看提交历史，以便确定要回退到哪个版本。
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

----------------------------------------
查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>
-----------------------------------------------------------------------------------------